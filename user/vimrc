" polyfloyd's .vimrc

version 8.0

" Vundle Settings
set nocompatible " be iMproved, required
filetype off     " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim' " let Vundle manage Vundle, required
Plugin 'airblade/vim-gitgutter'
Plugin 'bling/vim-airline'
Plugin 'chikamichi/mediawiki.vim'
Plugin 'fatih/vim-go'
Plugin 'godlygeek/tabular'
Plugin 'hail2u/vim-css3-syntax'
Plugin 'jlanzarotta/bufexplorer'
Plugin 'junegunn/fzf'
Plugin 'junegunn/goyo.vim'
Plugin 'metakirby5/codi.vim'
Plugin 'racer-rust/vim-racer'
Plugin 'rakr/vim-one'
Plugin 'scrooloose/nerdtree'
Plugin 'sheerun/vim-polyglot'
Plugin 'sirtaj/vim-openscad'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'valloric/youcompleteme'
Plugin 'vim-airline/vim-airline-themes'

call vundle#end()         " required
filetype plugin indent on " required

" VIM Settings
set autoindent
set backspace=indent,eol,start
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,default,latin1
set fillchars=vert:│,fold:\ 
set foldmethod=syntax
set foldnestmax=1
set grepprg=grep\ -nH\ $*
set hidden
set history=50
set hlsearch
set incsearch
set laststatus=2
set linebreak
set list
set listchars=tab:│\ ,trail:⋯,precedes:←,extends:→
set mouse=a
set mousemodel=popup_setpos
set nomodeline
set nostartofline
set nrformats=alpha
set path+=src
set shortmess=flmnxoOtTI
set showcmd
set showtabline=1
set smartindent
set smarttab
set splitright
set suffixes=.bak,~,.o,.h,.info,.swp,.obj,.aux,.log,.dvi,.bbl,.out,.o,.lo,.d,.class,.pyc
set switchbuf=useopen
set tabstop=4
set softtabstop=4
set shiftwidth=4
set termencoding=utf-8
set viminfo='20,\"500,%
set virtualedit=block
set wildignore+=*/*.bak,*/*~,*/*.o,*/*.sw*,*/*.sw*.obj,*/*.aux,*/*.dvi,*/*.bbl,*/*.out,*/*.o,*/*.lo,*/*.d,*/*.class,*/*.pyc
set wildmenu
set window=61
syntax on

" Key Mappings
nmap ; :
map <C-t>     :tabnew<CR>
map <C-q>     :tabclose<CR>
map <C-S-tab> :tabprevious<CR>
map <C-tab>   :tabnext<CR>
map <C-p>     :FZF<CR>
map <F10>     :NERDTreeToggle<CR>
if has("gui_running")
	inoremap <C-Space> <C-x><C-o>
elseif has("unix")
	inoremap <Nul> <C-x><C-o>
endif

" Colors & Theming
hi Normal      ctermfg=252 ctermbg=232
hi LineNr      ctermbg=0 ctermfg=12
hi NonText     ctermbg=0 ctermfg=12
hi ColorColumn ctermbg=0
hi Search      term=reverse ctermbg=8
hi Visual      term=reverse ctermbg=8
hi Comment     term=bold ctermfg=8 ctermbg=none
colorscheme one
set background=dark
set t_Co=256
set termguicolors
set guifont=Terminus\ 12
set guioptions-=m " Remove menubar
set guioptions-=T " Remove toolbar
set guioptions-=L " Remove left scrollbar
set guioptions-=r " Remove right scrollbar
let &colorcolumn="80"
let g:NERDTreeDirArrows=1
let g:NERDTreeMinimalUI=1
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_powerline_fonts=0
let g:airline_theme='one'
let g:airline#extensions#whitespace#checks = [ 'trailing' ]

" Plugin settings
let g:polyglot_disabled = ['go']
let g:go_fmt_options = { 'gofmt': '-s' }
let g:rustfmt_autosave = 1

" Autocmds and other stuff
autocmd BufRead,BufNewFile *.js,*.css,*.html,*.php set noexpandtab
autocmd BufRead,BufNewFile,BufWrite *.c,*.h,*.cc,*.hh,*.cpp,*.hpp,*.ino set ft=cpp
autocmd BufRead,BufNewFile,BufWrite *.md set ft=markdown
autocmd BufRead,BufNewFile *.md setlocal spelllang=en
autocmd BufRead,BufNewFile,BufWrite *.py set ft=python

autocmd FileType c,cpp setlocal cin expandtab
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType markdown setlocal expandtab tabstop=2 shiftwidth=2 spell
autocmd FileType python setlocal foldmethod=indent expandtab
autocmd FileType gitcommit setlocal nofoldenable
autocmd FileType json setlocal nofoldenable

" vim: set ft=vim
